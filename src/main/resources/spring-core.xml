<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:aontext="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


   <context:component-scan base-package="com.demo.service"/>
   <context:component-scan base-package="com.demo.mapper"/>


    <!--<aop:aspectj-autoproxy />-->


   <util:properties id="mortTestConfigs">
      <!--<prop key="corgi.keeper.address">${corgi.keeper.address}</prop>-->
      <!--<prop key="skinny.server.address">${skinny.server.address}</prop>-->
      <!--<prop key="vaccum.zookeeper.address">${vaccum.zookeeper.address}</prop>-->
      <!--<prop key="vaccum.zookeeper.session.timeout">${vaccum.zookeeper.session.timeout}</prop>-->
      <!--<prop key="vaccum.zookeeper.connect.timeout">${vaccum.zookeeper.connect.timeout}</prop>-->
      <!--<prop key="sequence.config">${sequence.config}</prop>-->
      <prop key="database.url">${database.url}</prop>
      <prop key="database.driver">${database.driver}</prop>
      <prop key="database.user">${database.user}</prop>
      <prop key="database.password">${database.password}</prop>

   </util:properties>


   <bean id="costaConfig"
         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="order" value="1"/>
      <property name="ignoreUnresolvablePlaceholders" value="true"/>
      <property name="locations">
         <list>
            <value>classpath*:test.properties</value>
         </list>
      </property>
   </bean>


   <!-- 配置数据源-->
   <bean id="jdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName">
         <value>com.mysql.jdbc.Driver</value>
      </property>
      <property name="url">
         <value>jdbc:mysql://172.19.30.22/ams?useUnicode=true&amp;characterEncoding=UTF-8</value>
         <!--ams是我的数据库  -->
      </property>
      <property name="username">
         <value>root</value>
      </property>
      <property name="password">
         <value>Mls@20160421</value>
      </property>
   </bean>


   <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
      <!--<property name="dataSource" ref="jdbcDataSource" />-->
      <!--<property name="configLocation" value="/WEB-INF/mybatis-config.xml"></property>-->
   <!--</bean>-->
   <!--<bean id="TokenDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
      <!--<property name="mapperInterface" value="com.springMyBatis.system.dao.UserDao"></property>-->
      <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>-->
   <!--</bean>-->


   <!-- MyBatis配置 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="jdbcDataSource" />
      <!--<property name="configLocation" value="/WEB-INF/conf/MyBatisConfiguration.xml" />-->
      <property name="mapperLocations" value="classpath*:/sqlmap/map/*Mapper.xml" />
      <!--<property name="typeAliasesPackage" value="${mybatis.alias.basepackage}" />-->
   </bean>

   <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="com.demo.mapper" />
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

   </bean>

</beans>








