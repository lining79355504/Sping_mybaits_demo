<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">



<generatorConfiguration>
    <!-- 数据库驱动包 -->
    <classPathEntry location="/Users/mort/Sping_mybaits_demo/src/jdbcdriver/mysql-connector-java-5.1.39-bin.jar" />



    <context id="aisSnsTables" targetRuntime="MyBatis3" >
        <!--<jdbcConnection-->
                <!--driverClass="com.mysql.jdbc.Driver"-->
                <!--connectionURL="jdbc:mysql://127.0.0.1:3306/deal_detail?useUnicode=true"-->
                <!--userId="root"-->
                <!--password="123456">-->
        <!--</jdbcConnection>-->

        <!--

        XML Parser Error on line 81: The content of element type "context" must match "(property*,plugin*,commentGenerator?,(connectionFactory|jdbcConnection),javaTypeResolver?,javaModelGenerator,sqlMapGenerator?,javaClientGenerator?,table+)".

       XML 配置的element顺序问题 启动是校验 context 顺序和层级必须一致  (property*,plugin*,commentGenerator?,
       (connectionFactory|jdbcConnection)
        -->
        <!--覆盖生成XML文件 1.3.7生效-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"></plugin>


        <!--注释不显示-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>




        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://127.0.0.1:3306/cat?useUnicode=true"
                userId="root"
                password="123456">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成dao对象 -->
        <javaModelGenerator targetPackage="com.demo.entityTmp"
                            targetProject="src/main/java">
            <property name="enableSubPackages" value="false" />
            <property name="trimStrings" value="false" />
        </javaModelGenerator>

        <!-- 生成用于查询的mapperXML 对象 -->
        <sqlMapGenerator targetPackage="sqlmap/maptmp/" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- 生成DAO的类文件以及配置文件 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.demo.daoTmp"
                             implementationPackage="com.demo.mapper.impl"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>



        <!-- 想要生成的数据库表,自动化工具会根据该表的结构生成相应的vo对象 -->
        <!-- 想要生成的数据库表,自动化工具会根据该表的结构生成相应的vo对象 -->
        <!--<table tableName="t_token" domainObjectName="Token" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="t_subscribe_relation" domainObjectName="SubscribeRelation" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="t_subscribe_service" domainObjectName="SubscribeService" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="t_subscribe_service_category" domainObjectName="SubscribeServiceSategory" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <table tableName="mapi_config" domainObjectName="MapiConfig" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false" >
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>



    </context>
</generatorConfiguration>
